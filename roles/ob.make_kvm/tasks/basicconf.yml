---
#Create the template 

- name: prepare | create directory for Virtual Machines
  become: yes
  file:
    path: "{{ lib_vm.vm_directory }}"
    state: directory
    owner: overburn
    group: overburn
    mode: 0775
    recurse: yes

- name: prepare | set hostname
  command: virt-customize -a {{ lib_vm.vm_directory}}/{{ lib_vm.vm_name }}.qcow2 --hostname {{ lib_os.vm_hostname }}

- name: prepare | set root password
  #become: yes
  shell: virt-customize -a {{ lib_vm.vm_directory}}/{{ lib_vm.vm_name }}.qcow2 --root-password password:{{ lib_vm.vm_root_pwd }}

- name: prepare | remove cloud init
  ##become: yes
  shell: virt-customize -a {{ lib_vm.vm_directory}}/{{ lib_vm.vm_name }}.qcow2 --run-command 'yum remove cloud-init* -y'

- name: Preparo ifcfg-eth0 file
  #become: yes
  shell: virt-customize -a {{ lib_vm.vm_directory}}/{{ lib_vm.vm_name }}.qcow2 --run-command 'rm /etc/sysconfig/network-scripts/ifcfg-eth0 '
#  ignore_errors: yes

- name: prepare | set ifcfg-eth0 file
  #become: yes
  shell: virt-customize -a "{{ lib_vm.vm_directory}}"/"{{ lib_vm.vm_name }}".qcow2 --run-command 'echo \"{{ item }}\"  >> /etc/sysconfig/network-scripts/ifcfg-eth0 '
  with_items:
    - DEVICE="eth0"
    - ONBOOT="yes"
    - TYPE="Ethernet"
    - PEERDNS="yes"
    - IPV6INIT="no"
    - IPADDR="{{ lib_net.ip_address }}"
    - NETMASK="{{ lib_net.netmask }}"
    - GATEWAY="{{ lib_net.gateway }}"
    - DNS1="8.8.8.8"
#  ignore_errors: yes

- name: prepare | set USER account
  shell: virt-customize -a {{ lib_vm.vm_directory}}/{{ lib_vm.vm_name }}.qcow2 --firstboot-command 'useradd -m -p "" {{ lib_os.vm_user }} && chage -d 0 {{ lib_os.vm_user }}'
